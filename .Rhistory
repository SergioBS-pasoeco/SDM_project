# Ignore typical files/dirs
usethis::use_git_ignore(c(".Rhistory", ".RData", ".Rproj.user", "data/raw/", "models/", "results/"))
install.packages("renv")
# Optional but recommended: initialize Git
usethis::use_git()
usethis::use_git_config(user.name = "SergioBS-pasoeco", user.email = "sergiobolivars@gmail.com")
# Verify
usethis::git_sitrep()
# In your project (R session opened in the project)
usethis::use_git()  # creates repo, first commit
install.packages("gert")
gert::git_config_set("user.name", "SergioBS-pasoeco", global = TRUE)
gert::git_config_set("user.name", "SergioBS-pasoeco")
gert::git_config_set("user.email", "sergiobolivars@gmail.com")
gert::git_config_global()
install.packages("gitcreds")
usethis::create_github_token()
gitcreds::gitcreds_set()
library(gitcreds)
gitcreds::gitcreds_set()
Sys.which("git")
usethis::git_sitrep()
library(gert)
gert::git_remote_list() # the origin is the SDM_project.git
gert::git_push(set_upstream = TRUE)
gert::git_fetch()
gert::git_remote_list() # the origin is the SDM_project.git
gert::git_fetch()
gert::git_push(set_upstream = TRUE)
repo_path <- git_find()  # errors if not in a git repo
git_info()               # current branch, head, repo path
git_status()             # staged/unstaged changes
git_branch_list()        # local branches
git_remote_list()        # remotes (origin, etc.)
git_log(max = 10)        # recent commits
git_config()
git_find()
gitcreds::gitcreds_set() # To stablish the token
token <- Sys.getenv("GITHUB_PAT", unset = NA)
if (is.na(token)) stop("Set GITHUB_PAT in your environment (not in code).")
token
gitcreds::gitcreds_set() # To stablish the token
library(usethis)
# gert::git_config_set("user.name", "SergioBS-pasoeco")
# gert::git_config_set("user.email", "sergiobolivars@gmail.com")
# gert::git_config_global()
# 1) Ensure identity (skip if already set)
usethis::use_git_config(user.name = "SergioBS-pasoeco", user.email = "sergiobolivars@gmail.com")
# 2) Init repo if missing
if (!dir.exists(".git")) gert::git_init(".")
# 3) Ensure at least one commit
if (!file.exists("README.md")) usethis::use_readme_md(open = FALSE)
gert::git_add(".")
gert::git_commit("Initial commit")
# 4) Force the default branch to 'main' using Git CLI (works across gert versions)
system2("git", c("branch", "-M", "origin"))
# 5) Verify
usethis::git_sitrep()
# 4) Force the default branch to 'main' using Git CLI (works across gert versions)
system2("git", c("branch", "-M", "origin"))
# 5) Verify
usethis::git_sitrep()
usethis::create_github_token().
usethis::create_github_token()
library(usethis)
create_github_token()
